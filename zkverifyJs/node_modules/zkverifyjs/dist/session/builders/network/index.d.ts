import { WalletOptions, zkVerifySessionOptions } from '../../types';
import { zkVerifySession } from '../../index';
import { SupportedNetwork } from '../../../config';
export type SupportedNetworkMap = {
    [K in keyof typeof SupportedNetwork]: (customWsUrl?: string) => NetworkBuilder;
};
export declare class NetworkBuilder {
    private readonly startSession;
    private options;
    constructor(startSession: (options: zkVerifySessionOptions) => Promise<zkVerifySession>, network: SupportedNetwork, customWsUrl?: string);
    withAccount(seedPhrase: string): Promise<zkVerifySession>;
    withWallet(wallet: WalletOptions): Promise<zkVerifySession>;
    readOnly(): Promise<zkVerifySession>;
}
//# sourceMappingURL=index.d.ts.map