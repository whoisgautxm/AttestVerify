import { FflonkVerificationKey, FflonkProof, FflonkPublicSignals } from '../types';
/**
 * Formats the FFLONK verification key.
 *
 * @param {FflonkVerificationKey | string} vkJson - The raw verification key data, either as a JSON string or an object.
 * @returns {FflonkVerificationKey} - The formatted verification key.
 */
export declare const formatVk: (vkJson: FflonkVerificationKey | string) => FflonkVerificationKey;
/**
 * Converts a number string to a 32-byte hexadecimal string.
 *
 * @param {string} numStr - The number string to convert.
 * @returns {string} - The 32-byte hexadecimal string.
 */
export declare const to32ByteHex: (numStr: string) => string;
/**
 * Formats the FFLONK proof data.
 *
 * @param {FflonkProof} proof - The raw proof data.
 * @returns {string} - The formatted proof data as a single hexadecimal string.
 */
export declare const formatProof: (proof: FflonkProof) => string;
/**
 * Formats the first public signal by converting it to a hexadecimal string.
 *
 * @param {FflonkPublicSignals} pubs - The array of public signals to format. Assumes the array contains at least one element.
 * @returns {string} - The formatted hexadecimal string of the first public signal, padded to 64 characters.
 */
export declare const formatPubs: (pubs: FflonkPublicSignals) => string;
//# sourceMappingURL=index.d.ts.map