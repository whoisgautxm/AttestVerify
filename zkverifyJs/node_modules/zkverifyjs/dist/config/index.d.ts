import { ProofProcessor } from '../types';
export declare enum SupportedNetwork {
    Testnet = "wss://testnet-rpc.zkverify.io",
    Custom = "custom"
}
export declare enum ProofType {
    fflonk = "fflonk",
    groth16 = "groth16",
    risc0 = "risc0",
    ultraplonk = "ultraplonk",
    proofofsql = "proofofsql"
}
export declare enum Library {
    snarkjs = "snarkjs",
    gnark = "gnark"
}
export declare enum CurveType {
    bn128 = "bn128",
    bn254 = "bn254",
    bls12381 = "bls12381"
}
interface ProofConfig {
    pallet: string;
    processor: ProofProcessor;
    requiresLibrary?: boolean;
    requiresCurve?: boolean;
}
export declare const proofConfigurations: Record<ProofType, ProofConfig>;
export declare const zkvTypes: {
    MerkleProof: {
        root: string;
        proof: string;
        number_of_leaves: string;
        leaf_index: string;
        leaf: string;
    };
};
export declare const zkvRpc: {
    poe: {
        proofPath: {
            description: string;
            params: ({
                name: string;
                type: string;
                isOptional?: undefined;
            } | {
                name: string;
                type: string;
                isOptional: boolean;
            })[];
            type: string;
        };
    };
};
export {};
//# sourceMappingURL=index.d.ts.map